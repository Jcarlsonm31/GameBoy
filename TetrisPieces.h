// hard-code all 7 piece rotations
// could have done this with bit encoding and 4 int's per piece. I might later if RAM is low
byte t_pieces[7][4][4][4]={
  {
    {
      {0,0,0,0},
      {1,1,1,1},
      {0,0,0,0},
      {0,0,0,0}  
    },
    {
      {0,0,1,0},
      {0,0,1,0},
      {0,0,1,0},
      {0,0,1,0}  
    },
    {
      {0,0,0,0},
      {0,0,0,0},
      {1,1,1,1},
      {0,0,0,0}  
    },
    {
      {0,1,0,0},
      {0,1,0,0},
      {0,1,0,0},
      {0,1,0,0}  
    }
  },
  {
    {
      {2,0,0,0},
      {2,2,2,0},
      {0,0,0,0},
      {0,0,0,0}  
    },
    {
      {0,2,2,0},
      {0,2,0,0},
      {0,2,0,0},
      {0,0,0,0}  
    },
    {
      {0,0,0,0},
      {2,2,2,0},
      {0,0,2,0},
      {0,0,0,0}  
    },
    {
      {0,2,0,0},
      {0,2,0,0},
      {2,2,0,0},
      {0,0,0,0}  
    }
  },
  {
    {
      {0,0,3,0},
      {3,3,3,0},
      {0,0,0,0},
      {0,0,0,0}  
    },
    {
      {0,3,0,0},
      {0,3,0,0},
      {0,3,3,0},
      {0,0,0,0}  
    },
    {
      {0,0,0,0},
      {3,3,3,0},
      {3,0,0,0},
      {0,0,0,0}  
    },
    {
      {3,3,0,0},
      {0,3,0,0},
      {0,3,0,0},
      {0,0,0,0}  
    }
  },
  {
    {
      {0,4,4,0},
      {0,4,4,0},
      {0,0,0,0},
      {0,0,0,0}  
    },
    {
      {0,4,4,0},
      {0,4,4,0},
      {0,0,0,0},
      {0,0,0,0}  
    },
    {
      {0,4,4,0},
      {0,4,4,0},
      {0,0,0,0},
      {0,0,0,0}  
    },
    {
      {0,4,4,0},
      {0,4,4,0},
      {0,0,0,0},
      {0,0,0,0}  
    }
  },
  {
    {
      {0,5,5,0},
      {5,5,0,0},
      {0,0,0,0},
      {0,0,0,0}  
    },
    {
      {0,5,0,0},
      {0,5,5,0},
      {0,0,5,0},
      {0,0,0,0}  
    },
    {
      {0,0,0,0},
      {0,5,5,0},
      {5,5,0,0},
      {0,0,0,0}  
    },
    {
      {5,0,0,0},
      {5,5,0,0},
      {0,5,0,0},
      {0,0,0,0}  
    }
  },
  {
    {
      {0,6,0,0},
      {6,6,6,0},
      {0,0,0,0},
      {0,0,0,0}  
    },
    {
      {0,6,0,0},
      {0,6,6,0},
      {0,6,0,0},
      {0,0,0,0}  
    },
    {
      {0,0,0,0},
      {6,6,6,0},
      {0,6,0,0},
      {0,0,0,0}  
    },
    {
      {0,6,0,0},
      {6,6,0,0},
      {0,6,0,0},
      {0,0,0,0}  
    }
  },
  {
    {
      {7,7,0,0},
      {0,7,7,0},
      {0,0,0,0},
      {0,0,0,0}  
    },
    {
      {0,0,7,0},
      {0,7,7,0},
      {0,7,0,0},
      {0,0,0,0}  
    },
    {
      {0,0,0,0},
      {7,7,0,0},
      {0,7,7,0},
      {0,0,0,0}  
    },
    {
      {0,7,0,0},
      {7,7,0,0},
      {7,0,0,0},
      {0,0,0,0}  
    }
  }  
};

// copied to in-play gameboard to reset a level
// pieces copied to gameboard during play for later collision detection
// top 2 rows are hidden (not drawn) and used for piece dropping and end game detection
byte t_backupGameBoard[24][14] = {
	{0,8,0,0,0,0,0,0,0,0,0,0,9,0},
	{0,8,0,0,0,0,0,0,0,0,0,0,9,0},
	{0,8,0,0,0,0,0,0,0,0,0,0,9,0},
	{0,8,0,0,0,0,0,0,0,0,0,0,9,0},
	{0,8,0,0,0,0,0,0,0,0,0,0,9,0},
	{0,8,0,0,0,0,0,0,0,0,0,0,9,0},
	{0,8,0,0,0,0,0,0,0,0,0,0,9,0},
	{0,8,0,0,0,0,0,0,0,0,0,0,9,0},
	{0,8,0,0,0,0,0,0,0,0,0,0,9,0},
	{0,8,0,0,0,0,0,0,0,0,0,0,9,0},
	{0,8,0,0,0,0,0,0,0,0,0,0,9,0},
	{0,8,0,0,0,0,0,0,0,0,0,0,9,0},
	{0,8,0,0,0,0,0,0,0,0,0,0,9,0},
	{0,8,0,0,0,0,0,0,0,0,0,0,9,0},
	{0,8,0,0,0,0,0,0,0,0,0,0,9,0},
	{0,8,0,0,0,0,0,0,0,0,0,0,9,0},
	{0,8,0,0,0,0,0,0,0,0,0,0,9,0},
	{0,8,0,0,0,0,0,0,0,0,0,0,9,0},
	{0,8,0,0,0,0,0,0,0,0,0,0,9,0},
	{0,8,0,0,0,0,0,0,0,0,0,0,9,0},
	{0,8,0,0,0,0,0,0,0,0,0,0,9,0},
	{0,8,0,0,0,0,0,0,0,0,0,0,9,0},
	{0,1,1,1,1,1,1,1,1,1,1,1,1,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0}
};
